#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SuperMarket
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SuperMarketDB")]
	public partial class SuperMarketDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertSIMS_user(SIMS_user instance);
    partial void UpdateSIMS_user(SIMS_user instance);
    partial void DeleteSIMS_user(SIMS_user instance);
    partial void InsertSIMS_commodity(SIMS_commodity instance);
    partial void UpdateSIMS_commodity(SIMS_commodity instance);
    partial void DeleteSIMS_commodity(SIMS_commodity instance);
    partial void InsertSISM_commodityclass(SISM_commodityclass instance);
    partial void UpdateSISM_commodityclass(SISM_commodityclass instance);
    partial void DeleteSISM_commodityclass(SISM_commodityclass instance);
    partial void InsertSISM_console(SISM_console instance);
    partial void UpdateSISM_console(SISM_console instance);
    partial void DeleteSISM_console(SISM_console instance);
    #endregion
		
		public SuperMarketDataClassesDataContext() : 
				base(global::SuperMarket.Properties.Settings.Default.SuperMarketDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SuperMarketDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperMarketDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperMarketDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperMarketDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SIMS_user> SIMS_user
		{
			get
			{
				return this.GetTable<SIMS_user>();
			}
		}
		
		public System.Data.Linq.Table<SIMS_commodity> SIMS_commodity
		{
			get
			{
				return this.GetTable<SIMS_commodity>();
			}
		}
		
		public System.Data.Linq.Table<SISM_commodityclass> SISM_commodityclass
		{
			get
			{
				return this.GetTable<SISM_commodityclass>();
			}
		}
		
		public System.Data.Linq.Table<SISM_console> SISM_console
		{
			get
			{
				return this.GetTable<SISM_console>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIMS_user")]
	public partial class SIMS_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userName;
		
		private string _userPwd;
		
		private string _userSex;
		
		private string _userPhone;
		
		private string _note;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserPwdChanging(string value);
    partial void OnuserPwdChanged();
    partial void OnuserSexChanging(string value);
    partial void OnuserSexChanged();
    partial void OnuserPhoneChanging(string value);
    partial void OnuserPhoneChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public SIMS_user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPwd", DbType="VarChar(50)")]
		public string userPwd
		{
			get
			{
				return this._userPwd;
			}
			set
			{
				if ((this._userPwd != value))
				{
					this.OnuserPwdChanging(value);
					this.SendPropertyChanging();
					this._userPwd = value;
					this.SendPropertyChanged("userPwd");
					this.OnuserPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userSex", DbType="VarChar(2)")]
		public string userSex
		{
			get
			{
				return this._userSex;
			}
			set
			{
				if ((this._userSex != value))
				{
					this.OnuserSexChanging(value);
					this.SendPropertyChanging();
					this._userSex = value;
					this.SendPropertyChanged("userSex");
					this.OnuserSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPhone", DbType="VarChar(20)")]
		public string userPhone
		{
			get
			{
				return this._userPhone;
			}
			set
			{
				if ((this._userPhone != value))
				{
					this.OnuserPhoneChanging(value);
					this.SendPropertyChanging();
					this._userPhone = value;
					this.SendPropertyChanged("userPhone");
					this.OnuserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="VarChar(50)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIMS_commodity")]
	public partial class SIMS_commodity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CId;
		
		private string _CName;
		
		private string _CBuyPrice;
		
		private string _CSalePrice;
		
		private string _CType;
		
		private string _CQty;
		
		private string _CPicture;
		
		private string _CNote;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIdChanging(int value);
    partial void OnCIdChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnCBuyPriceChanging(string value);
    partial void OnCBuyPriceChanged();
    partial void OnCSalePriceChanging(string value);
    partial void OnCSalePriceChanged();
    partial void OnCTypeChanging(string value);
    partial void OnCTypeChanged();
    partial void OnCQtyChanging(string value);
    partial void OnCQtyChanged();
    partial void OnCPictureChanging(string value);
    partial void OnCPictureChanged();
    partial void OnCNoteChanging(string value);
    partial void OnCNoteChanged();
    #endregion
		
		public SIMS_commodity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CId
		{
			get
			{
				return this._CId;
			}
			set
			{
				if ((this._CId != value))
				{
					this.OnCIdChanging(value);
					this.SendPropertyChanging();
					this._CId = value;
					this.SendPropertyChanged("CId");
					this.OnCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CName
		{
			get
			{
				return this._CName;
			}
			set
			{
				if ((this._CName != value))
				{
					this.OnCNameChanging(value);
					this.SendPropertyChanging();
					this._CName = value;
					this.SendPropertyChanged("CName");
					this.OnCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CBuyPrice", DbType="VarChar(50)")]
		public string CBuyPrice
		{
			get
			{
				return this._CBuyPrice;
			}
			set
			{
				if ((this._CBuyPrice != value))
				{
					this.OnCBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._CBuyPrice = value;
					this.SendPropertyChanged("CBuyPrice");
					this.OnCBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSalePrice", DbType="VarChar(50)")]
		public string CSalePrice
		{
			get
			{
				return this._CSalePrice;
			}
			set
			{
				if ((this._CSalePrice != value))
				{
					this.OnCSalePriceChanging(value);
					this.SendPropertyChanging();
					this._CSalePrice = value;
					this.SendPropertyChanged("CSalePrice");
					this.OnCSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CType", DbType="VarChar(50)")]
		public string CType
		{
			get
			{
				return this._CType;
			}
			set
			{
				if ((this._CType != value))
				{
					this.OnCTypeChanging(value);
					this.SendPropertyChanging();
					this._CType = value;
					this.SendPropertyChanged("CType");
					this.OnCTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CQty", DbType="VarChar(50)")]
		public string CQty
		{
			get
			{
				return this._CQty;
			}
			set
			{
				if ((this._CQty != value))
				{
					this.OnCQtyChanging(value);
					this.SendPropertyChanging();
					this._CQty = value;
					this.SendPropertyChanged("CQty");
					this.OnCQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPicture", DbType="VarChar(50)")]
		public string CPicture
		{
			get
			{
				return this._CPicture;
			}
			set
			{
				if ((this._CPicture != value))
				{
					this.OnCPictureChanging(value);
					this.SendPropertyChanging();
					this._CPicture = value;
					this.SendPropertyChanged("CPicture");
					this.OnCPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNote", DbType="VarChar(50)")]
		public string CNote
		{
			get
			{
				return this._CNote;
			}
			set
			{
				if ((this._CNote != value))
				{
					this.OnCNoteChanging(value);
					this.SendPropertyChanging();
					this._CNote = value;
					this.SendPropertyChanged("CNote");
					this.OnCNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SISM_commodityclass")]
	public partial class SISM_commodityclass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SId;
		
		private string _SName;
		
		private string _SNote;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIdChanging(int value);
    partial void OnSIdChanged();
    partial void OnSNameChanging(string value);
    partial void OnSNameChanged();
    partial void OnSNoteChanging(string value);
    partial void OnSNoteChanged();
    #endregion
		
		public SISM_commodityclass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SId
		{
			get
			{
				return this._SId;
			}
			set
			{
				if ((this._SId != value))
				{
					this.OnSIdChanging(value);
					this.SendPropertyChanging();
					this._SId = value;
					this.SendPropertyChanged("SId");
					this.OnSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SName", DbType="VarChar(50)")]
		public string SName
		{
			get
			{
				return this._SName;
			}
			set
			{
				if ((this._SName != value))
				{
					this.OnSNameChanging(value);
					this.SendPropertyChanging();
					this._SName = value;
					this.SendPropertyChanged("SName");
					this.OnSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNote", DbType="VarChar(50)")]
		public string SNote
		{
			get
			{
				return this._SNote;
			}
			set
			{
				if ((this._SNote != value))
				{
					this.OnSNoteChanging(value);
					this.SendPropertyChanging();
					this._SNote = value;
					this.SendPropertyChanged("SNote");
					this.OnSNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SISM_console")]
	public partial class SISM_console : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RId;
		
		private int _CId;
		
		private string _Number;
		
		private string _Price;
		
		private string _Choose;
		
		private string _UserName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRIdChanging(int value);
    partial void OnRIdChanged();
    partial void OnCIdChanging(int value);
    partial void OnCIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnChooseChanging(string value);
    partial void OnChooseChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public SISM_console()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RId
		{
			get
			{
				return this._RId;
			}
			set
			{
				if ((this._RId != value))
				{
					this.OnRIdChanging(value);
					this.SendPropertyChanging();
					this._RId = value;
					this.SendPropertyChanged("RId");
					this.OnRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", DbType="Int NOT NULL")]
		public int CId
		{
			get
			{
				return this._CId;
			}
			set
			{
				if ((this._CId != value))
				{
					this.OnCIdChanging(value);
					this.SendPropertyChanging();
					this._CId = value;
					this.SendPropertyChanged("CId");
					this.OnCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Choose", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Choose
		{
			get
			{
				return this._Choose;
			}
			set
			{
				if ((this._Choose != value))
				{
					this.OnChooseChanging(value);
					this.SendPropertyChanging();
					this._Choose = value;
					this.SendPropertyChanged("Choose");
					this.OnChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
